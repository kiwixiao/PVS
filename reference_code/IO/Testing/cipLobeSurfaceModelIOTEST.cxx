#include "cipLobeSurfaceModelIO.h"
#include "cipExceptionObject.h"
#include <iostream>

int main( int argc, char* argv[] )
{
  std::cout << "Reading lobe surface model..." << std::endl;
  cip::LobeSurfaceModelIO leftModelReader;
    leftModelReader.SetFileName( argv[1] );
  try
    {
    leftModelReader.Read();
    }
  catch ( cip::ExceptionObject &excp )
    {
    std::cerr << "Exception caught reading lobe surface model:";
    std::cerr << excp << std::endl;
    }

    double gtOrigin[3]  = {-147.216, -313.786, -330.5};
    double gtSpacing[3] = {0.568359, 0.568359, 0.5};
    unsigned int numModes = 18;
    unsigned int dimension = 37;

    if ( leftModelReader.GetOutput()->GetImageOrigin()[0] != gtOrigin[0] ||
	 leftModelReader.GetOutput()->GetImageOrigin()[1] != gtOrigin[1] ||
	 leftModelReader.GetOutput()->GetImageOrigin()[2] != gtOrigin[2] ||
	 leftModelReader.GetOutput()->GetNumberOfModes() != numModes )
      {
	std::cout << "FAILED" << std::endl;
	return 1;
      }

    double gtMean[37] = {-187.53, -300.478, -313.991, -65.5996, -29.06, -311.368, 
    			 -316.228, -221.603, -150.908, -54.9207, -41.576, -117.24, 
    			 -210.16, -225.584, -263.056, -229.674, -271.15, -231.595, 
    			 -275.014, -230.162, -271.346, -199.148, -207.804, -171.549, 
    			 -162.367, -147.059, -107.448, -142.509, -98.6095, -137.564, 
    			 -89.8067, -132.066, -79.9485, -162.646, -138.311, -195.775, 
    			 -201.813};

    std::vector< double* > gtDomainLocs;
    double tmp00[3] = {66.487, -141.573, 0}; gtDomainLocs.push_back(tmp00);
    double tmp01[3] = {0.55734, -234.216, 0}; gtDomainLocs.push_back(tmp01);
    double tmp02[3] = {132.417, -234.216, 0}; gtDomainLocs.push_back(tmp02);
    double tmp03[3] = {132.417, -48.9307, 0}; gtDomainLocs.push_back(tmp03);
    double tmp04[3] = {0.55734, -48.9307, 0}; gtDomainLocs.push_back(tmp04);
    double tmp05[3] = {44.5104, -234.216, 0}; gtDomainLocs.push_back(tmp05);
    double tmp06[3] = {88.4635, -234.216, 0}; gtDomainLocs.push_back(tmp06);
    double tmp07[3] = {132.417, -172.454, 0}; gtDomainLocs.push_back(tmp07);
    double tmp08[3] = {132.417, -110.692, 0}; gtDomainLocs.push_back(tmp08);
    double tmp09[3] = {88.4635, -48.9307, 0}; gtDomainLocs.push_back(tmp09);
    double tmp10[3] = {44.5104, -48.9307, 0}; gtDomainLocs.push_back(tmp10);
    double tmp11[3] = {0.55734, -110.692, 0}; gtDomainLocs.push_back(tmp11);
    double tmp12[3] = {0.55734, -172.454, 0}; gtDomainLocs.push_back(tmp12);
    double tmp13[3] = {44.5104, -172.454, 0}; gtDomainLocs.push_back(tmp13);
    double tmp14[3] = {22.5339, -203.335, 0}; gtDomainLocs.push_back(tmp14);
    double tmp15[3] = {59.1615, -172.454, 0}; gtDomainLocs.push_back(tmp15);
    double tmp16[3] = {51.836, -203.335, 0}; gtDomainLocs.push_back(tmp16);
    double tmp17[3] = {73.8125, -172.454, 0}; gtDomainLocs.push_back(tmp17);
    double tmp18[3] = {81.138, -203.335, 0}; gtDomainLocs.push_back(tmp18);
    double tmp19[3] = {88.4635, -172.454, 0}; gtDomainLocs.push_back(tmp19);
    double tmp20[3] = {110.44, -203.335, 0}; gtDomainLocs.push_back(tmp20);
    double tmp21[3] = {88.4635, -151.867, 0}; gtDomainLocs.push_back(tmp21);
    double tmp22[3] = {110.44, -162.16, 0}; gtDomainLocs.push_back(tmp22);
    double tmp23[3] = {88.4635, -131.28, 0}; gtDomainLocs.push_back(tmp23);
    double tmp24[3] = {110.44, -120.986, 0}; gtDomainLocs.push_back(tmp24);
    double tmp25[3] = {88.4635, -110.692, 0}; gtDomainLocs.push_back(tmp25);
    double tmp26[3] = {110.44, -79.8115, 0}; gtDomainLocs.push_back(tmp26);
    double tmp27[3] = {73.8125, -110.692, 0}; gtDomainLocs.push_back(tmp27);
    double tmp28[3] = {81.138, -79.8115, 0}; gtDomainLocs.push_back(tmp28);
    double tmp29[3] = {59.1615, -110.692, 0}; gtDomainLocs.push_back(tmp29);
    double tmp30[3] = {51.836, -79.8115, 0}; gtDomainLocs.push_back(tmp30);
    double tmp31[3] = {44.5104, -110.692, 0}; gtDomainLocs.push_back(tmp31);
    double tmp32[3] = {22.5339, -79.8115, 0}; gtDomainLocs.push_back(tmp32);
    double tmp33[3] = {44.5104, -131.28, 0}; gtDomainLocs.push_back(tmp33);
    double tmp34[3] = {22.5339, -120.986, 0}; gtDomainLocs.push_back(tmp34);
    double tmp35[3] = {44.5104, -151.867, 0}; gtDomainLocs.push_back(tmp35);
    double tmp36[3] = {22.5339, -162.16, 0}; gtDomainLocs.push_back(tmp36);

    for ( unsigned int i=0; i<dimension; i++ )
      {
    	if ( gtMean[i] != leftModelReader.GetOutput()->GetMeanSurfacePoints()[i][2] ||
	     gtDomainLocs[i][0] != leftModelReader.GetOutput()->GetMeanSurfacePoints()[i][0] || 
	     gtDomainLocs[i][1] != leftModelReader.GetOutput()->GetMeanSurfacePoints()[i][1] )
    	  {
    	    std::cout << "FAILED" << std::endl;
    	    return 1;
    	  }
      }

    double gtEigenvalues[18] = {23088.3, 10429.6, 4303.43, 1924.97, 779.57, 497.973, 135.552, 
    				119.254, 64.1636, 36.0829, 19.3031, 7.01463, 5.80769, 4.18209, 
    				1.84393, 1.2934, 1.07206, 0.183431};
    double gtModeWeights[18] = {1.5, 1.2, 0.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    
    for ( unsigned int i=0; i<numModes; i++ )
      {
    	if ( gtEigenvalues[i] != (*leftModelReader.GetOutput()->GetEigenvalues())[i] ||
    	     gtModeWeights[i] != (*leftModelReader.GetOutput()->GetModeWeights())[i] )
    	  {
    	    std::cout << "FAILED" << std::endl;
    	    return 1;
    	  }
      }
    
    std::vector< double* > gtEigenvectors;
    
    double tmpA[37] = {-0.0354675, -0.393374, -0.220722, 0.241586, 0.163986, -0.34276, -0.27646, 
    		       -0.0112545, 0.110223, 0.201366, 0.183356, 0.00880461, -0.201025, -0.181981, 
    		       -0.283533, -0.157325, -0.244535, -0.11062, -0.184267, -0.0605631, -0.146842, 
    		       0.00638922, 0.00598429, 0.0586153, 0.0757577, 0.0760552, 0.148989, 0.0692809, 
    		       0.117998, 0.0477543, 0.10611, 0.0372738, 0.0973056, -0.0218202, 0.00327877, 
    		       -0.120645, -0.155897};
      gtEigenvectors.push_back(tmpA);
    
    double tmpB[37] = {-0.0367011, -0.224341, 0.136648, -0.103018, -0.467141, -0.104844, 0.0240732, 
    		       0.0705313, 0.0237021, -0.214087, -0.345999, -0.297931, -0.258945, -0.133261, 
    		       -0.189115, -0.0914026, -0.107881, -0.0339816, -0.0119025, 0.0235041, 0.0704082, 
    		       0.00889154, 0.0348904, -0.00152162, 0.01296, -0.0281096, -0.0639833, -0.0476944, 
    		       -0.135629, -0.0701498, -0.218648, -0.108305, -0.30306, -0.106907, -0.194414, 
    		       -0.113066, -0.191547};
      gtEigenvectors.push_back(tmpB);

    double tmpC[37] = {-0.137656, 0.0145608, -0.257661, -0.415616, 0.123389, -0.0788818, -0.141276, 
    		       -0.284235, -0.327905, -0.239877, -0.036521, 0.131544, 0.0308606, -0.0993816, 
    		       -0.0453592, -0.128712, -0.100962, -0.121964, -0.113679, -0.116684, -0.167534, 
    		       -0.150234, -0.220568, -0.168219, -0.218781, -0.153846, -0.308985, -0.0840903, 
    		       -0.177581, -0.00914391, -0.0172296, 0.0416895, 0.0902042, -0.0380655, 0.0611139, 
    		       -0.0730364, -0.0280374};
      gtEigenvectors.push_back(tmpC);

    double tmpD[37] = {-0.171843, 0.0863844, 0.0404363, 0.203274, 0.111345, 0.191194, 0.172175, -0.215032, 
    		       -0.0855306, 0.261254, 0.239273, -0.264482, -0.183855, -0.00280291, 0.048361, 
    		       0.0426217, 0.13392, -0.0206046, 0.101135, -0.139359, -0.0189016, -0.171388, -0.21172, 
    		       -0.190296, -0.133438, -0.12895, 0.0665971, -0.170458, 0.0853705, -0.161108, 0.0637177, 
    		       -0.20125, -0.0194569, -0.293368, -0.328268, -0.137377, -0.192084};
      gtEigenvectors.push_back(tmpD);
    
    double tmpE[37] = {0.204168, -0.125861, -0.454822, 0.16196, -0.204252, -0.119772, -0.25488, -0.269263, 
    		       0.00518404, 0.0421356, -0.139816, -0.13877, 0.0867593, 0.265381, 0.0906899, 0.263713, 
    		       0.0995319, 0.186355, -0.0185495, 0.0346148, -0.161187, 0.046248, -0.198097, -0.0542443, 
    		       -0.0443674, -0.0694657, 0.126857, -0.0848429, 0.0321008, -0.0722573, -0.0910344, -0.108816, 
    		       -0.185214, 0.0877342, -0.0719137, 0.262484, 0.174644}; 
      gtEigenvectors.push_back(tmpE);
    
    double tmpF[37] = {-0.0887488, 0.31507, -0.00761033, 0.0991207, -0.320444, 0.174235, 0.00546139, -0.143825, 
    		       0.139258, 0.0138845, -0.21524, 0.0216373, 0.0963305, -0.0886633, 0.105394, -0.154835, 
    		       -0.0182078, -0.237565, -0.179083, -0.311674, -0.31243, -0.220459, -0.179108, 0.0565239, 
    		       0.0888304, 0.169445, 0.201767, 0.203679, 0.220315, 0.164145, 0.0232046, 0.134153, -0.0937355, 
    		       0.016097, 0.086493, -0.116704, 0.013382};
      gtEigenvectors.push_back(tmpF);
    
    double tmpG[37] = {0.132063, 0.0769328, -0.076087, -0.265943, 0.120008, 0.095221, 0.0110373, -0.219953, 
    		       0.149416, -0.233098, 0.0628347, -0.125581, -0.160741, 0.054244, 0.0134701, 0.173416, 0.0713605, 
    		       0.162933, -0.0539062, 0.00207445, -0.19574, 0.211597, -0.0485333, 0.311871, 0.317215, 0.292325, 
    		       -0.084774, 0.204279, -0.131581, 0.064433, 0.190746, -0.106288, 0.165781, -0.19995, -0.235053, 
    		       -0.0454271, -0.162997};
      gtEigenvectors.push_back(tmpG);
    
    double tmpH[37] = {-0.0545467, 0.237, 0.0111823, 0.15752, 0.154862, 0.0133729, -0.102271, 0.0617128, 0.283539, 
    		       -0.0814912, -0.0497722, 0.127895, 0.185072, -0.0530979, 0.048255, -0.122019, -0.127874, 
    		       -0.0810793, -0.232249, 0.00996009, -0.25202, 0.100841, 0.170824, 0.0390677, 0.176011, -0.141205, 
    		       0.0574703, -0.304154, -0.270187, -0.378893, -0.238462, -0.269979, 0.0190161, -0.183224, -0.0202742, 
    		       -0.0217589, 0.090086}; 
      gtEigenvectors.push_back(tmpH);
    
    double tmpI[37] = {-0.515698, -0.0509462, -0.262413, -0.0757502, -0.0791487, -0.106347, -0.198588, 0.162002, 
    		       -0.105911, 0.0676274, -0.0867253, 0.101706, 0.220276, 0.0658548, 0.170575, 0.0814363, 0.154667, 
    		       0.0512313, 0.0802448, -0.0218253, 0.218234, 0.174861, 0.093552, 0.0953176, 0.0253646, 0.147938, 
    		       -0.00305651, 0.108736, 0.148286, -0.0426264, 0.01257, -0.0759942, -0.0919807, -0.369376, -0.000182478, 
    		       -0.322767, 0.0931823}; 
      gtEigenvectors.push_back(tmpI);
    
    double tmpJ[37] = {0.0807005, -0.0909792, 0.2173, -0.0806786, 0.00669655, -0.16754, -0.193179, 0.333332, 0.0189456, 
    		       -0.0349941, 0.165413, -0.247818, 0.173884, 0.193943, 0.099898, 0.0583746, -0.0361801, -0.196609, 
    		       -0.254652, -0.387056, 0.0895827, -0.216541, -0.0530531, -0.0152644, -0.0259702, 0.0560189, -0.177414, 
    		       0.0788862, -0.0891153, 0.0470644, 0.192183, -0.14814, -0.0091709, -0.0531566, -0.243156, 0.179586, 
    		       0.256756};
      gtEigenvectors.push_back(tmpJ);
    
    double tmpK[37] = {-0.140617, 0.134948, -0.0473095, -0.053704, -0.243837, 0.071007, -0.116909, 0.223177, 0.000378635, 
    		       -0.0545181, -0.102315, -0.103668, -0.128271, 0.0682025, -0.00542548, 0.110581, -0.0287423, 0.140232, 
    		       -0.156851, 0.111317, -0.286728, 0.0819969, 0.338747, -0.193506, -0.116333, -0.275856, 0.0293526, 
    		       -0.185629, 0.156171, 0.0563371, 0.45961, 0.153972, 0.267562, -0.018443, -0.0806845, 0.033656, 
    		       -0.0756327};
      gtEigenvectors.push_back(tmpK);
    
    double tmpL[37] = {0.00873337, 0.226251, 0.191999, -0.0705026, -0.148692, -0.0275885, -0.0363388, -0.107709, -0.327217, 
    		       0.289028, 0.119882, -0.0838282, 0.102759, -0.0844633, -0.0707653, -0.0943602, -0.287268, 0.0795802, 
    		       -0.277139, 0.219888, 0.0506975, 0.301863, -0.205251, 0.403552, -0.0204296, -0.142687, -0.0929469, 
    		       -0.0619049, 0.199701, 0.0166266, 0.0507941, -0.100913, -0.10123, 0.0298687, -0.0594361, 0.0303188, 
    		       0.114234}; 
      gtEigenvectors.push_back(tmpL);
    
    double tmpM[37] = {-0.501403, 0.0377727, 0.00348394, -0.0232647, -0.0774784, -0.0301963, 0.0441147, -0.180126, 0.135945, 
    		       -0.121838, 0.0291566, -0.0722887, 0.000772154, -0.00504242, -0.0836516, -0.0116852, -0.152089, 
    		       -0.00311011, -0.0221267, 0.0990277, 0.320369, -0.0371105, -0.227245, -0.113525, 0.242944, 0.187577, 
    		       0.220129, -0.198005, -0.204289, -0.0856404, 0.296305, -0.00516765, 0.0616379, 0.260004, 0.0341193, 
    		       0.244957, 0.0737413}; 
      gtEigenvectors.push_back(tmpM);
    
    double tmpN[37] = {0.0363933, -0.0305089, 0.0938805, 0.0262032, -0.241251, 0.0333902, -0.0110986, 0.180537, -0.172865, 
    		       0.222187, 0.162279, 0.142913, -0.0558797, -0.0655572, -0.0375938, 0.204191, 0.0626223, 0.326764, -0.07465, 
    		       -0.16473, -0.216149, -0.0650745, -0.0985174, -0.0110307, -0.0540261, 0.230887, -0.0210888, -0.0233994, 
    		       -0.40679, -0.21134, 0.166236, -0.116167, -0.118465, 0.139211, 0.335011, -0.228628, -0.0952886};
      gtEigenvectors.push_back(tmpN);
    
    double tmpO[37] = {0.134688, 0.040539, -0.405971, -0.0105092, -0.125381, 0.118525, 0.0524316, 0.191679, -0.0798049, 
    		       0.0956741, 0.00546971, -0.188769, 0.0764816, -0.18715, 0.0456796, -0.381113, 0.0535017, -0.182303, 
    		       0.360393, 0.102244, -0.0511234, -0.0846829, 0.0715491, 0.156276, 0.0610372, 0.052743, -0.131863, 
    		       0.049121, -0.0550549, -0.209844, 0.221995, -0.227812, 0.119753, 0.270425, -0.126637, -0.0420319, 
    		       0.105128};
      gtEigenvectors.push_back(tmpO);
    
    double tmpP[37] = {0.00190047, -0.235185, 0.176943, 0.0809158, -0.0398182, -0.0512182, -0.0524656, -0.0243819, 0.2564, 
    		       -0.0766065, -0.0830034, -0.00610187, 0.0509163, -0.0250191, 0.0978086, 0.00638159, 0.260753, 
    		       -0.0460684, 0.137481, -0.171604, 0.0113242, 0.192516, -0.379727, 0.215161, 0.150335, -0.474185, 
    		       -0.162528, -0.111693, 0.0144375, -0.095392, 0.181435, 0.167073, 0.120074, 0.106658, 0.121433, 
    		       -0.252849, 0.0285321}; 
      gtEigenvectors.push_back(tmpP);
    
    double tmpQ[37] = {0.196864, -0.0735153, 0.235221, 0.0413537, -0.0764544, -0.150965, -0.158274, -0.15463, -0.0686183, 
    		       -0.0631303, -0.13298, 0.0827306, 0.0969349, 0.051992, 0.0323283, -0.0855831, 0.0467127, 0.0672359, 
    		       0.0666051, 0.408589, 0.0324698, -0.549016, -0.0338835, 0.181525, -0.01158, 0.0819648, 0.126481, 
    		       -0.076123, 0.00450565, -0.137184, 0.205433, 0.0425764, 0.159468, -0.347973, 0.0541252, -0.0797433, 
    		       0.0745158};
      gtEigenvectors.push_back(tmpQ);
    
    double tmpR[37] = {-0.0377646, 0.00138432, -0.0567079, -0.0192831, -0.220766, -0.00349359, 0.0144736, 0.00350178, 
    		       0.0667104, 0.365636, 0.173703, 0.0105343, 0.0487836, -0.0158486, -0.0201229, -0.111331, -0.0333683, 
    		       -0.0150122, 0.186437, 0.0794442, -0.130669, 0.0180266, -0.0226018, -0.132925, 0.308312, -0.0609701, 
    		       -0.235011, -0.00656838, -0.331221, 0.185328, -0.0792973, 0.428854, -0.0510031, -0.355662, -0.0601731, 
    		       0.227687, 0.106336}; 
      gtEigenvectors.push_back(tmpR);
    
    for ( unsigned int m = 0; m<numModes; m++ )
      {
    	for ( unsigned int d = 0; d<dimension; d++ )
    	  {   
    	    if ( gtEigenvectors[m][d] != (*leftModelReader.GetOutput()->GetEigenvectors())[m][d] )
    	      {
    		std::cout << "FAILED" << std::endl;
    		return 1;
    	      }
    	  }
      }

    std::cout << "PASSED" << std::endl;
    return 0;
}
